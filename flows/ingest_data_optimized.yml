id: ingest_data_optimized
namespace: candlethrob.ingestion

description: |
  MANUAL ONLY - Development ingestion using candlethrob:dev with embedded wallet

  USE CASES:
  - Development testing of new features
  - Data recovery with smaller batch sizes (25 vs 100)
  - Debugging with embedded wallet setup
  - Emergency backup when production flow fails
  - Rate limit management during API issues

  CONFIGURATION:
  - Batch size: 25 (smaller for testing)
  - Rate limit: 5 req/min (optimized for Polygon API limits)
  - Image: candlethrob:dev (embedded wallet)
  - Trigger: MANUAL ONLY (no automatic scheduling)

tasks:
  - id: start_optimized_ingestion
    type: io.kestra.plugin.core.log.Log
    message: "Starting optimized daily ingestion using development image with embedded wallet"

  # Main ingestion using development image with embedded wallet
  - id: run_complete_ingestion
    type: io.kestra.plugin.docker.Run
    containerImage: candlethrob:dev
    pullPolicy: NEVER
    networkMode: host
    command: ["python", "-m", "CandleThrob.ingestion.ingest_data"]
    env:
      BATCH_SIZE: "25"
      POLYGON_RATE_LIMIT: "5"
      # Development image has embedded Oracle wallet and OCI configuration
      # Rate limit set to 5 req/min to respect Polygon.io API limits
    dockerOptions:
      name: "candlethrob_dev_ingest_{{ execution.id }}"
    timeout: PT4H
    retry:
      type: constant
      maxAttempt: 3
      interval: PT5M

  # Check if ingestion completed successfully
  - id: check_ingestion_status
    type: io.kestra.plugin.docker.Run
    containerImage: candlethrob:dev
    pullPolicy: NEVER
    networkMode: host
    command:
      - "sh"
      - "-c"
      - |
        echo "Checking ingestion status..."
        if [ -f /app/data/batch_cycle_complete.flag ]; then
            echo 'INGESTION_COMPLETE'
            echo "Flag file found, ingestion completed successfully"
            cat /app/data/batch_cycle_complete.flag 2>/dev/null || echo "Flag file exists but empty"
        else
            echo 'INGESTION_INCOMPLETE'
            echo "Flag file not found, ingestion may still be running or failed"
            ls -la /app/data/ 2>/dev/null || echo "Data directory not accessible"
        fi
        # Always exit 0 so stdout is captured
        exit 0
    dockerOptions:
      name: "candlethrob_dev_status_{{ execution.id }}"
    timeout: PT5M

  # Update macro data if ingestion was successful
  - id: update_macro_data
    type: io.kestra.plugin.docker.Run
    runIf: "{{ outputs.check_ingestion_status.stdout | trim | startsWith('INGESTION_COMPLETE') }}"
    containerImage: candlethrob:dev
    pullPolicy: NEVER
    networkMode: host
    command: ["python", "-m", "CandleThrob.ingestion.update_macro"]
    dockerOptions:
      name: "candlethrob_dev_macro_{{ execution.id }}"
    timeout: PT30M
    retry:
      type: constant
      maxAttempt: 2
      interval: PT5M

  # Validate data quality
  - id: validate_data_quality
    type: io.kestra.plugin.docker.Run
    runIf: "{{ outputs.update_macro_data.exitCode == 0 }}"
    containerImage: candlethrob:dev
    pullPolicy: NEVER
    networkMode: host
    command: ["python", "-m", "CandleThrob.ingestion.validate_data"]
    dockerOptions:
      name: "candlethrob_dev_validate_{{ execution.id }}"
    timeout: PT15M

  # Clean up flags and generate summary
  - id: cleanup_and_summary
    type: io.kestra.plugin.docker.Run
    runIf: "{{ outputs.validate_data_quality.exitCode == 0 }}"
    containerImage: candlethrob:dev
    pullPolicy: NEVER
    networkMode: host
    command:
      - "sh"
      - "-c"
      - |
        echo '=== Daily Ingestion Summary ==='
        echo 'Ingestion completed at:' $(date)
        echo 'Checking results...'
        if [ -f /app/data/ingestion_results.json ]; then
            echo 'Results file found:'
            cat /app/data/ingestion_results.json | head -20
        else
            echo 'No results file found'
        fi
        echo ''
        echo 'Cleaning up flags...'
        rm -f /app/data/batch_cycle_complete.flag
        echo 'Cleanup completed'
        echo '=== Summary Complete ==='
    dockerOptions:
      name: "candlethrob_dev_summary_{{ execution.id }}"
    timeout: PT2M

  - id: completion_message
    type: io.kestra.plugin.core.log.Log
    runIf: "{{ outputs.cleanup_and_summary.exitCode == 0 }}"
    message: "âœ… Optimized daily ingestion pipeline completed successfully!"

# Manual trigger only - no automatic scheduling
# Use this flow for:
# - Development testing
# - Data recovery with smaller batches
# - Debugging with embedded wallet
# - Emergency backup ingestion
#
# triggers:
#   - id: schedule_optimized_daily
#     type: io.kestra.plugin.core.trigger.Schedule
#     cron: "0 21 * * 1-5" # 9 PM EST on weekdays
#     timezone: America/New_York

labels:
  environment: "development"
  team: "data-engineering"
  criticality: "low"
  trigger_type: "manual_only"
  use_cases: "testing,debugging,recovery,backup"
