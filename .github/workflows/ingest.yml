name: Run Daily Ingestion

on:

    schedule:
        - cron: '0 3 * * *' # Run daily at 3 AM UTC

jobs:
    ingest:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            
            - name: Set Up Python Environment
              uses: actions/setup-python@v4
              with:
                python-version: '3.11'
            # Removed redundant pip upgrade step; handled in Install System and Python Dependencies

            - name: Cache Python dependencies
              uses: actions/cache@v4
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

            - name: Cache TA-Lib binary
              uses: actions/cache@v4
              with:
                path: ta-lib_0.6.4_amd64.deb
                key: ta-lib-0.6.4-amd64

            - name: Download and Install System Dependencies and TA-Lib
              run: |
                sudo apt-get update
                sudo apt-get install -y build-essential wget libtool autoconf automake pkg-config python3-dev libffi-dev
                if [ ! -f ta-lib_0.6.4_amd64.deb ]; then
                  wget https://github.com/ta-lib/ta-lib/releases/download/v0.6.4/ta-lib_0.6.4_amd64.deb
                fi
                sudo dpkg -i ta-lib_0.6.4_amd64.deb
                sudo apt-get install -y -f

            - name: Install Python Dependencies
              run: |
                pip install ta-lib
                pip install -r requirements.txt
          


            - name: Set Up Google Cloud Credentials
              run: |
                echo "${{ secrets.GCS_KEY_BASE64 }}" | base64 --decode > ${{ github.workspace }}/gcs_key.json
                echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/gcs_key.json" >> $GITHUB_ENV
            - name: Run Ingestion Script
              env:
                GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcs_key.json
                FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
              working-directory: ${{ github.workspace }}
              run: |
                python ingestion/ingest_data.py

            - name: upload debug.log to GCS
              env:
                GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcs_key.json
                FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
              run: |
                if [ -f debug.log ]; then
                  gsutil cp debug.log gs://candlethrob-candata/logs/ingestion/debug.log
                else
                  echo "No debug.log file found."
                fi
